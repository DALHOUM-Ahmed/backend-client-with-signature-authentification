// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Follow extends ethereum.Event {
  get params(): Follow__Params {
    return new Follow__Params(this);
  }
}

export class Follow__Params {
  _event: Follow;

  constructor(event: Follow) {
    this._event = event;
  }

  get follower(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get followed(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetBTCAddress extends ethereum.Event {
  get params(): SetBTCAddress__Params {
    return new SetBTCAddress__Params(this);
  }
}

export class SetBTCAddress__Params {
  _event: SetBTCAddress;

  constructor(event: SetBTCAddress) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get btcAddress(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetBackgroundColor extends ethereum.Event {
  get params(): SetBackgroundColor__Params {
    return new SetBackgroundColor__Params(this);
  }
}

export class SetBackgroundColor__Params {
  _event: SetBackgroundColor;

  constructor(event: SetBackgroundColor) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get backgroundColor(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetBio extends ethereum.Event {
  get params(): SetBio__Params {
    return new SetBio__Params(this);
  }
}

export class SetBio__Params {
  _event: SetBio;

  constructor(event: SetBio) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bio(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetDateOfBirth extends ethereum.Event {
  get params(): SetDateOfBirth__Params {
    return new SetDateOfBirth__Params(this);
  }
}

export class SetDateOfBirth__Params {
  _event: SetDateOfBirth;

  constructor(event: SetDateOfBirth) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get dateOfBirth(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetDiscord extends ethereum.Event {
  get params(): SetDiscord__Params {
    return new SetDiscord__Params(this);
  }
}

export class SetDiscord__Params {
  _event: SetDiscord;

  constructor(event: SetDiscord) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get discord(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetEmail extends ethereum.Event {
  get params(): SetEmail__Params {
    return new SetEmail__Params(this);
  }
}

export class SetEmail__Params {
  _event: SetEmail;

  constructor(event: SetEmail) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get email(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetEmailVerifiedData extends ethereum.Event {
  get params(): SetEmailVerifiedData__Params {
    return new SetEmailVerifiedData__Params(this);
  }
}

export class SetEmailVerifiedData__Params {
  _event: SetEmailVerifiedData;

  constructor(event: SetEmailVerifiedData) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get data(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetFingerScan extends ethereum.Event {
  get params(): SetFingerScan__Params {
    return new SetFingerScan__Params(this);
  }
}

export class SetFingerScan__Params {
  _event: SetFingerScan;

  constructor(event: SetFingerScan) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fingerScan(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetFirstName extends ethereum.Event {
  get params(): SetFirstName__Params {
    return new SetFirstName__Params(this);
  }
}

export class SetFirstName__Params {
  _event: SetFirstName;

  constructor(event: SetFirstName) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get firstName(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetGovID extends ethereum.Event {
  get params(): SetGovID__Params {
    return new SetGovID__Params(this);
  }
}

export class SetGovID__Params {
  _event: SetGovID;

  constructor(event: SetGovID) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get govID(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetInstagram extends ethereum.Event {
  get params(): SetInstagram__Params {
    return new SetInstagram__Params(this);
  }
}

export class SetInstagram__Params {
  _event: SetInstagram;

  constructor(event: SetInstagram) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get instagram(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetLastName extends ethereum.Event {
  get params(): SetLastName__Params {
    return new SetLastName__Params(this);
  }
}

export class SetLastName__Params {
  _event: SetLastName;

  constructor(event: SetLastName) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lastName(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetMiddleName extends ethereum.Event {
  get params(): SetMiddleName__Params {
    return new SetMiddleName__Params(this);
  }
}

export class SetMiddleName__Params {
  _event: SetMiddleName;

  constructor(event: SetMiddleName) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get middleName(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetPictureNFT extends ethereum.Event {
  get params(): SetPictureNFT__Params {
    return new SetPictureNFT__Params(this);
  }
}

export class SetPictureNFT__Params {
  _event: SetPictureNFT;

  constructor(event: SetPictureNFT) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetPictureUpload extends ethereum.Event {
  get params(): SetPictureUpload__Params {
    return new SetPictureUpload__Params(this);
  }
}

export class SetPictureUpload__Params {
  _event: SetPictureUpload;

  constructor(event: SetPictureUpload) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get url(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetPronoun extends ethereum.Event {
  get params(): SetPronoun__Params {
    return new SetPronoun__Params(this);
  }
}

export class SetPronoun__Params {
  _event: SetPronoun;

  constructor(event: SetPronoun) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pronoun(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class SetTags extends ethereum.Event {
  get params(): SetTags__Params {
    return new SetTags__Params(this);
  }
}

export class SetTags__Params {
  _event: SetTags;

  constructor(event: SetTags) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tags(): Array<string> {
    return this._event.parameters[1].value.toStringArray();
  }
}

export class SetTelephone extends ethereum.Event {
  get params(): SetTelephone__Params {
    return new SetTelephone__Params(this);
  }
}

export class SetTelephone__Params {
  _event: SetTelephone;

  constructor(event: SetTelephone) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get telephone(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetTelephoneVerifiedData extends ethereum.Event {
  get params(): SetTelephoneVerifiedData__Params {
    return new SetTelephoneVerifiedData__Params(this);
  }
}

export class SetTelephoneVerifiedData__Params {
  _event: SetTelephoneVerifiedData;

  constructor(event: SetTelephoneVerifiedData) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get data(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetTiktok extends ethereum.Event {
  get params(): SetTiktok__Params {
    return new SetTiktok__Params(this);
  }
}

export class SetTiktok__Params {
  _event: SetTiktok;

  constructor(event: SetTiktok) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tiktok(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetTwitter extends ethereum.Event {
  get params(): SetTwitter__Params {
    return new SetTwitter__Params(this);
  }
}

export class SetTwitter__Params {
  _event: SetTwitter;

  constructor(event: SetTwitter) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get twitter(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SetUsername extends ethereum.Event {
  get params(): SetUsername__Params {
    return new SetUsername__Params(this);
  }
}

export class SetUsername__Params {
  _event: SetUsername;

  constructor(event: SetUsername) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get username(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SignupBasic extends ethereum.Event {
  get params(): SignupBasic__Params {
    return new SignupBasic__Params(this);
  }
}

export class SignupBasic__Params {
  _event: SignupBasic;

  constructor(event: SignupBasic) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _userAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get names(): Array<string> {
    return this._event.parameters[2].value.toStringArray();
  }

  get socialInfo(): Array<string> {
    return this._event.parameters[3].value.toStringArray();
  }

  get userContact(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }
}

export class SignupProfileInfo extends ethereum.Event {
  get params(): SignupProfileInfo__Params {
    return new SignupProfileInfo__Params(this);
  }
}

export class SignupProfileInfo__Params {
  _event: SignupProfileInfo;

  constructor(event: SignupProfileInfo) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pronoun(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get dateOfBirth(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get profile(): Array<string> {
    return this._event.parameters[3].value.toStringArray();
  }

  get bio(): string {
    return this._event.parameters[4].value.toString();
  }

  get nftAddress(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get ownedID(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get verificationData(): Array<string> {
    return this._event.parameters[7].value.toStringArray();
  }
}

export class SignupTags extends ethereum.Event {
  get params(): SignupTags__Params {
    return new SignupTags__Params(this);
  }
}

export class SignupTags__Params {
  _event: SignupTags;

  constructor(event: SignupTags) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tags(): Array<string> {
    return this._event.parameters[1].value.toStringArray();
  }
}

export class UnFollow extends ethereum.Event {
  get params(): UnFollow__Params {
    return new UnFollow__Params(this);
  }
}

export class UnFollow__Params {
  _event: UnFollow;

  constructor(event: UnFollow) {
    this._event = event;
  }

  get follower(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get followed(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class users__signupInputOwnedNFTStruct extends ethereum.Tuple {
  get nftAddress(): Address {
    return this[0].toAddress();
  }

  get ownedID(): BigInt {
    return this[1].toBigInt();
  }
}

export class users__getNFTOwnedByResultValue0Struct extends ethereum.Tuple {
  get nftAddress(): Address {
    return this[0].toAddress();
  }

  get ownedID(): BigInt {
    return this[1].toBigInt();
  }
}

export class users__userByIDResultPictureNFTStruct extends ethereum.Tuple {
  get nftAddress(): Address {
    return this[0].toAddress();
  }

  get ownedID(): BigInt {
    return this[1].toBigInt();
  }
}

export class users__userByIDResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;
  value4: BigInt;
  value5: i32;
  value6: string;
  value7: users__userByIDResultPictureNFTStruct;
  value8: string;
  value9: string;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: string,
    value4: BigInt,
    value5: i32,
    value6: string,
    value7: users__userByIDResultPictureNFTStruct,
    value8: string,
    value9: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    map.set("value6", ethereum.Value.fromString(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    map.set("value8", ethereum.Value.fromString(this.value8));
    map.set("value9", ethereum.Value.fromString(this.value9));
    return map;
  }

  getFirstName(): string {
    return this.value0;
  }

  getMiddleName(): string {
    return this.value1;
  }

  getLastName(): string {
    return this.value2;
  }

  getUserName(): string {
    return this.value3;
  }

  getDateOfBirth(): BigInt {
    return this.value4;
  }

  getPronoun(): i32 {
    return this.value5;
  }

  getBgColor(): string {
    return this.value6;
  }

  getPictureNFT(): users__userByIDResultPictureNFTStruct {
    return this.value7;
  }

  getPictureUpload(): string {
    return this.value8;
  }

  getBio(): string {
    return this.value9;
  }
}

export class users__userContactByIDResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;

  constructor(value0: string, value1: string, value2: string, value3: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    return map;
  }

  getEmail(): string {
    return this.value0;
  }

  getTelephone(): string {
    return this.value1;
  }

  getTelephoneVerifiedData(): string {
    return this.value2;
  }

  getEmailVerifiedData(): string {
    return this.value3;
  }
}

export class users__userOptionalByIDResult {
  value0: string;
  value1: string;

  constructor(value0: string, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getGovtID(): string {
    return this.value0;
  }

  getFingerScan(): string {
    return this.value1;
  }
}

export class users__userSocialsByIDResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;

  constructor(value0: string, value1: string, value2: string, value3: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    return map;
  }

  getDiscord(): string {
    return this.value0;
  }

  getInstagram(): string {
    return this.value1;
  }

  getTwitter(): string {
    return this.value2;
  }

  getTiktok(): string {
    return this.value3;
  }
}

export class users__verifyNFTAvatarInputDataStruct extends ethereum.Tuple {
  get nftAddress(): Address {
    return this[0].toAddress();
  }

  get ownedID(): BigInt {
    return this[1].toBigInt();
  }
}

export class users extends ethereum.SmartContract {
  static bind(address: Address): users {
    return new users("users", address);
  }

  signup(
    proofOfSignature: Bytes,
    userAddress: Address,
    data: Array<string>,
    dateOfBirth: BigInt,
    pronoun: i32,
    tags: Array<string>,
    fields: Array<i32>,
    ownedNFT: users__signupInputOwnedNFTStruct
  ): BigInt {
    let result = super.call(
      "signup",
      "signup(bytes32,address,string[],uint256,uint8,string[],uint8[],(address,uint256)):(uint256)",
      [
        ethereum.Value.fromFixedBytes(proofOfSignature),
        ethereum.Value.fromAddress(userAddress),
        ethereum.Value.fromStringArray(data),
        ethereum.Value.fromUnsignedBigInt(dateOfBirth),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pronoun)),
        ethereum.Value.fromStringArray(tags),
        ethereum.Value.fromI32Array(fields),
        ethereum.Value.fromTuple(ownedNFT)
      ]
    );

    return result[0].toBigInt();
  }

  try_signup(
    proofOfSignature: Bytes,
    userAddress: Address,
    data: Array<string>,
    dateOfBirth: BigInt,
    pronoun: i32,
    tags: Array<string>,
    fields: Array<i32>,
    ownedNFT: users__signupInputOwnedNFTStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "signup",
      "signup(bytes32,address,string[],uint256,uint8,string[],uint8[],(address,uint256)):(uint256)",
      [
        ethereum.Value.fromFixedBytes(proofOfSignature),
        ethereum.Value.fromAddress(userAddress),
        ethereum.Value.fromStringArray(data),
        ethereum.Value.fromUnsignedBigInt(dateOfBirth),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pronoun)),
        ethereum.Value.fromStringArray(tags),
        ethereum.Value.fromI32Array(fields),
        ethereum.Value.fromTuple(ownedNFT)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addressById(param0: BigInt): Address {
    let result = super.call("addressById", "addressById(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_addressById(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "addressById",
      "addressById(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  administration(): Address {
    let result = super.call("administration", "administration():(address)", []);

    return result[0].toAddress();
  }

  try_administration(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "administration",
      "administration():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  btcAddress(param0: Address): string {
    let result = super.call("btcAddress", "btcAddress(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toString();
  }

  try_btcAddress(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall("btcAddress", "btcAddress(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getNFTOwnedBy(userID: BigInt): users__getNFTOwnedByResultValue0Struct {
    let result = super.call(
      "getNFTOwnedBy",
      "getNFTOwnedBy(uint256):((address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(userID)]
    );

    return changetype<users__getNFTOwnedByResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getNFTOwnedBy(
    userID: BigInt
  ): ethereum.CallResult<users__getNFTOwnedByResultValue0Struct> {
    let result = super.tryCall(
      "getNFTOwnedBy",
      "getNFTOwnedBy(uint256):((address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(userID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<users__getNFTOwnedByResultValue0Struct>(value[0].toTuple())
    );
  }

  getSignedUser(sessionHash: Bytes): Address {
    let result = super.call(
      "getSignedUser",
      "getSignedUser(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(sessionHash)]
    );

    return result[0].toAddress();
  }

  try_getSignedUser(sessionHash: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSignedUser",
      "getSignedUser(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(sessionHash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  idByAddress(param0: Address): BigInt {
    let result = super.call("idByAddress", "idByAddress(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_idByAddress(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "idByAddress",
      "idByAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  idByUserName(param0: string): BigInt {
    let result = super.call("idByUserName", "idByUserName(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toBigInt();
  }

  try_idByUserName(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "idByUserName",
      "idByUserName(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isFollowing(param0: BigInt, param1: BigInt): boolean {
    let result = super.call(
      "isFollowing",
      "isFollowing(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_isFollowing(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isFollowing",
      "isFollowing(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  userByID(param0: BigInt): users__userByIDResult {
    let result = super.call(
      "userByID",
      "userByID(uint256):(string,string,string,string,uint256,uint8,string,(address,uint256),string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new users__userByIDResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toI32(),
      result[6].toString(),
      changetype<users__userByIDResultPictureNFTStruct>(result[7].toTuple()),
      result[8].toString(),
      result[9].toString()
    );
  }

  try_userByID(param0: BigInt): ethereum.CallResult<users__userByIDResult> {
    let result = super.tryCall(
      "userByID",
      "userByID(uint256):(string,string,string,string,uint256,uint8,string,(address,uint256),string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new users__userByIDResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toI32(),
        value[6].toString(),
        changetype<users__userByIDResultPictureNFTStruct>(value[7].toTuple()),
        value[8].toString(),
        value[9].toString()
      )
    );
  }

  userContactByID(param0: BigInt): users__userContactByIDResult {
    let result = super.call(
      "userContactByID",
      "userContactByID(uint256):(string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new users__userContactByIDResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString()
    );
  }

  try_userContactByID(
    param0: BigInt
  ): ethereum.CallResult<users__userContactByIDResult> {
    let result = super.tryCall(
      "userContactByID",
      "userContactByID(uint256):(string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new users__userContactByIDResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString()
      )
    );
  }

  userOptionalByID(param0: BigInt): users__userOptionalByIDResult {
    let result = super.call(
      "userOptionalByID",
      "userOptionalByID(uint256):(string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new users__userOptionalByIDResult(
      result[0].toString(),
      result[1].toString()
    );
  }

  try_userOptionalByID(
    param0: BigInt
  ): ethereum.CallResult<users__userOptionalByIDResult> {
    let result = super.tryCall(
      "userOptionalByID",
      "userOptionalByID(uint256):(string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new users__userOptionalByIDResult(
        value[0].toString(),
        value[1].toString()
      )
    );
  }

  userSocialsByID(param0: BigInt): users__userSocialsByIDResult {
    let result = super.call(
      "userSocialsByID",
      "userSocialsByID(uint256):(string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new users__userSocialsByIDResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString()
    );
  }

  try_userSocialsByID(
    param0: BigInt
  ): ethereum.CallResult<users__userSocialsByIDResult> {
    let result = super.tryCall(
      "userSocialsByID",
      "userSocialsByID(uint256):(string,string,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new users__userSocialsByIDResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString()
      )
    );
  }

  verifyNFTAvatar(
    user: Address,
    data: users__verifyNFTAvatarInputDataStruct
  ): boolean {
    let result = super.call(
      "verifyNFTAvatar",
      "verifyNFTAvatar(address,(address,uint256)):(bool)",
      [ethereum.Value.fromAddress(user), ethereum.Value.fromTuple(data)]
    );

    return result[0].toBoolean();
  }

  try_verifyNFTAvatar(
    user: Address,
    data: users__verifyNFTAvatarInputDataStruct
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifyNFTAvatar",
      "verifyNFTAvatar(address,(address,uint256)):(bool)",
      [ethereum.Value.fromAddress(user), ethereum.Value.fromTuple(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  verifyNFTOwner(
    user: Address,
    contractAddress: Address,
    tokenId: BigInt
  ): boolean {
    let result = super.call(
      "verifyNFTOwner",
      "verifyNFTOwner(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );

    return result[0].toBoolean();
  }

  try_verifyNFTOwner(
    user: Address,
    contractAddress: Address,
    tokenId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifyNFTOwner",
      "verifyNFTOwner(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ExpireAndEraseSessionCall extends ethereum.Call {
  get inputs(): ExpireAndEraseSessionCall__Inputs {
    return new ExpireAndEraseSessionCall__Inputs(this);
  }

  get outputs(): ExpireAndEraseSessionCall__Outputs {
    return new ExpireAndEraseSessionCall__Outputs(this);
  }
}

export class ExpireAndEraseSessionCall__Inputs {
  _call: ExpireAndEraseSessionCall;

  constructor(call: ExpireAndEraseSessionCall) {
    this._call = call;
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ExpireAndEraseSessionCall__Outputs {
  _call: ExpireAndEraseSessionCall;

  constructor(call: ExpireAndEraseSessionCall) {
    this._call = call;
  }
}

export class ExpireSessionCall extends ethereum.Call {
  get inputs(): ExpireSessionCall__Inputs {
    return new ExpireSessionCall__Inputs(this);
  }

  get outputs(): ExpireSessionCall__Outputs {
    return new ExpireSessionCall__Outputs(this);
  }
}

export class ExpireSessionCall__Inputs {
  _call: ExpireSessionCall;

  constructor(call: ExpireSessionCall) {
    this._call = call;
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ExpireSessionCall__Outputs {
  _call: ExpireSessionCall;

  constructor(call: ExpireSessionCall) {
    this._call = call;
  }
}

export class FollowCall extends ethereum.Call {
  get inputs(): FollowCall__Inputs {
    return new FollowCall__Inputs(this);
  }

  get outputs(): FollowCall__Outputs {
    return new FollowCall__Outputs(this);
  }
}

export class FollowCall__Inputs {
  _call: FollowCall;

  constructor(call: FollowCall) {
    this._call = call;
  }

  get follower(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get followed(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class FollowCall__Outputs {
  _call: FollowCall;

  constructor(call: FollowCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _administration(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetBtcAddressCall extends ethereum.Call {
  get inputs(): SetBtcAddressCall__Inputs {
    return new SetBtcAddressCall__Inputs(this);
  }

  get outputs(): SetBtcAddressCall__Outputs {
    return new SetBtcAddressCall__Outputs(this);
  }
}

export class SetBtcAddressCall__Inputs {
  _call: SetBtcAddressCall;

  constructor(call: SetBtcAddressCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _btcAddress(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetBtcAddressCall__Outputs {
  _call: SetBtcAddressCall;

  constructor(call: SetBtcAddressCall) {
    this._call = call;
  }
}

export class SigninCall extends ethereum.Call {
  get inputs(): SigninCall__Inputs {
    return new SigninCall__Inputs(this);
  }

  get outputs(): SigninCall__Outputs {
    return new SigninCall__Outputs(this);
  }
}

export class SigninCall__Inputs {
  _call: SigninCall;

  constructor(call: SigninCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get proofOfSignature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SigninCall__Outputs {
  _call: SigninCall;

  constructor(call: SigninCall) {
    this._call = call;
  }
}

export class SignupCall extends ethereum.Call {
  get inputs(): SignupCall__Inputs {
    return new SignupCall__Inputs(this);
  }

  get outputs(): SignupCall__Outputs {
    return new SignupCall__Outputs(this);
  }
}

export class SignupCall__Inputs {
  _call: SignupCall;

  constructor(call: SignupCall) {
    this._call = call;
  }

  get proofOfSignature(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get userAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get data(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }

  get dateOfBirth(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get pronoun(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get tags(): Array<string> {
    return this._call.inputValues[5].value.toStringArray();
  }

  get fields(): Array<i32> {
    return this._call.inputValues[6].value.toI32Array();
  }

  get ownedNFT(): SignupCallOwnedNFTStruct {
    return changetype<SignupCallOwnedNFTStruct>(
      this._call.inputValues[7].value.toTuple()
    );
  }
}

export class SignupCall__Outputs {
  _call: SignupCall;

  constructor(call: SignupCall) {
    this._call = call;
  }

  get userID(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SignupCallOwnedNFTStruct extends ethereum.Tuple {
  get nftAddress(): Address {
    return this[0].toAddress();
  }

  get ownedID(): BigInt {
    return this[1].toBigInt();
  }
}

export class UnFollowCall extends ethereum.Call {
  get inputs(): UnFollowCall__Inputs {
    return new UnFollowCall__Inputs(this);
  }

  get outputs(): UnFollowCall__Outputs {
    return new UnFollowCall__Outputs(this);
  }
}

export class UnFollowCall__Inputs {
  _call: UnFollowCall;

  constructor(call: UnFollowCall) {
    this._call = call;
  }

  get follower(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get followed(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class UnFollowCall__Outputs {
  _call: UnFollowCall;

  constructor(call: UnFollowCall) {
    this._call = call;
  }
}

export class UpdateBatchCall extends ethereum.Call {
  get inputs(): UpdateBatchCall__Inputs {
    return new UpdateBatchCall__Inputs(this);
  }

  get outputs(): UpdateBatchCall__Outputs {
    return new UpdateBatchCall__Outputs(this);
  }
}

export class UpdateBatchCall__Inputs {
  _call: UpdateBatchCall;

  constructor(call: UpdateBatchCall) {
    this._call = call;
  }

  get userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get dateOfBirth(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get pronoun(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get tags(): Array<string> {
    return this._call.inputValues[4].value.toStringArray();
  }

  get fields(): Array<i32> {
    return this._call.inputValues[5].value.toI32Array();
  }

  get ownedNFT(): UpdateBatchCallOwnedNFTStruct {
    return changetype<UpdateBatchCallOwnedNFTStruct>(
      this._call.inputValues[6].value.toTuple()
    );
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class UpdateBatchCall__Outputs {
  _call: UpdateBatchCall;

  constructor(call: UpdateBatchCall) {
    this._call = call;
  }
}

export class UpdateBatchCallOwnedNFTStruct extends ethereum.Tuple {
  get nftAddress(): Address {
    return this[0].toAddress();
  }

  get ownedID(): BigInt {
    return this[1].toBigInt();
  }
}
