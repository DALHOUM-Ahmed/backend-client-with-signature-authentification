// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddComment extends ethereum.Event {
  get params(): AddComment__Params {
    return new AddComment__Params(this);
  }
}

export class AddComment__Params {
  _event: AddComment;

  constructor(event: AddComment) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get commentID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get comment(): string {
    return this._event.parameters[3].value.toString();
  }

  get tags(): AddCommentTagsStruct {
    return changetype<AddCommentTagsStruct>(
      this._event.parameters[4].value.toTuple()
    );
  }
}

export class AddCommentTagsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class AddCommentLike extends ethereum.Event {
  get params(): AddCommentLike__Params {
    return new AddCommentLike__Params(this);
  }
}

export class AddCommentLike__Params {
  _event: AddCommentLike;

  constructor(event: AddCommentLike) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get commentID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AddPostLike extends ethereum.Event {
  get params(): AddPostLike__Params {
    return new AddPostLike__Params(this);
  }
}

export class AddPostLike__Params {
  _event: AddPostLike;

  constructor(event: AddPostLike) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AddReply extends ethereum.Event {
  get params(): AddReply__Params {
    return new AddReply__Params(this);
  }
}

export class AddReply__Params {
  _event: AddReply;

  constructor(event: AddReply) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get commentID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get replyID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get text(): string {
    return this._event.parameters[3].value.toString();
  }

  get tags(): AddReplyTagsStruct {
    return changetype<AddReplyTagsStruct>(
      this._event.parameters[4].value.toTuple()
    );
  }
}

export class AddReplyTagsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class AddReplyLike extends ethereum.Event {
  get params(): AddReplyLike__Params {
    return new AddReplyLike__Params(this);
  }
}

export class AddReplyLike__Params {
  _event: AddReplyLike;

  constructor(event: AddReplyLike) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get replyID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AddVote extends ethereum.Event {
  get params(): AddVote__Params {
    return new AddVote__Params(this);
  }
}

export class AddVote__Params {
  _event: AddVote;

  constructor(event: AddVote) {
    this._event = event;
  }

  get postID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get userID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get voteID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get option(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CreatePoll extends ethereum.Event {
  get params(): CreatePoll__Params {
    return new CreatePoll__Params(this);
  }
}

export class CreatePoll__Params {
  _event: CreatePoll;

  constructor(event: CreatePoll) {
    this._event = event;
  }

  get postID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get options(): Array<string> {
    return this._event.parameters[1].value.toStringArray();
  }

  get singleOption(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class CreatePost extends ethereum.Event {
  get params(): CreatePost__Params {
    return new CreatePost__Params(this);
  }
}

export class CreatePost__Params {
  _event: CreatePost;

  constructor(event: CreatePost) {
    this._event = event;
  }

  get _authorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get title(): string {
    return this._event.parameters[1].value.toString();
  }

  get body(): string {
    return this._event.parameters[2].value.toString();
  }

  get CIDAsset(): string {
    return this._event.parameters[3].value.toString();
  }

  get tags(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }

  get taggedElements(): CreatePostTaggedElementsStruct {
    return changetype<CreatePostTaggedElementsStruct>(
      this._event.parameters[5].value.toTuple()
    );
  }

  get createdAt(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get groupID(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get _type(): i32 {
    return this._event.parameters[8].value.toI32();
  }

  get postID(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class CreatePostTaggedElementsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class DeleteComment extends ethereum.Event {
  get params(): DeleteComment__Params {
    return new DeleteComment__Params(this);
  }
}

export class DeleteComment__Params {
  _event: DeleteComment;

  constructor(event: DeleteComment) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get commentID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DeleteReply extends ethereum.Event {
  get params(): DeleteReply__Params {
    return new DeleteReply__Params(this);
  }
}

export class DeleteReply__Params {
  _event: DeleteReply;

  constructor(event: DeleteReply) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get replyID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EditBackgroundColor extends ethereum.Event {
  get params(): EditBackgroundColor__Params {
    return new EditBackgroundColor__Params(this);
  }
}

export class EditBackgroundColor__Params {
  _event: EditBackgroundColor;

  constructor(event: EditBackgroundColor) {
    this._event = event;
  }

  get postID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get backgroundColor(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class EditCaptionType extends ethereum.Event {
  get params(): EditCaptionType__Params {
    return new EditCaptionType__Params(this);
  }
}

export class EditCaptionType__Params {
  _event: EditCaptionType;

  constructor(event: EditCaptionType) {
    this._event = event;
  }

  get postID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get captionType(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class EditComment extends ethereum.Event {
  get params(): EditComment__Params {
    return new EditComment__Params(this);
  }
}

export class EditComment__Params {
  _event: EditComment;

  constructor(event: EditComment) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get commentID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newComment(): string {
    return this._event.parameters[2].value.toString();
  }

  get tags(): EditCommentTagsStruct {
    return changetype<EditCommentTagsStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }
}

export class EditCommentTagsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class EditReply extends ethereum.Event {
  get params(): EditReply__Params {
    return new EditReply__Params(this);
  }
}

export class EditReply__Params {
  _event: EditReply;

  constructor(event: EditReply) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get replyID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newText(): string {
    return this._event.parameters[2].value.toString();
  }

  get tags(): EditReplyTagsStruct {
    return changetype<EditReplyTagsStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }
}

export class EditReplyTagsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class HidePost extends ethereum.Event {
  get params(): HidePost__Params {
    return new HidePost__Params(this);
  }
}

export class HidePost__Params {
  _event: HidePost;

  constructor(event: HidePost) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get authorChoice(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class MintedNFT extends ethereum.Event {
  get params(): MintedNFT__Params {
    return new MintedNFT__Params(this);
  }
}

export class MintedNFT__Params {
  _event: MintedNFT;

  constructor(event: MintedNFT) {
    this._event = event;
  }

  get postID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get nftID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RemoveCommentLike extends ethereum.Event {
  get params(): RemoveCommentLike__Params {
    return new RemoveCommentLike__Params(this);
  }
}

export class RemoveCommentLike__Params {
  _event: RemoveCommentLike;

  constructor(event: RemoveCommentLike) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get commentID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RemovePostLike extends ethereum.Event {
  get params(): RemovePostLike__Params {
    return new RemovePostLike__Params(this);
  }
}

export class RemovePostLike__Params {
  _event: RemovePostLike;

  constructor(event: RemovePostLike) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RemoveReplyLike extends ethereum.Event {
  get params(): RemoveReplyLike__Params {
    return new RemoveReplyLike__Params(this);
  }
}

export class RemoveReplyLike__Params {
  _event: RemoveReplyLike;

  constructor(event: RemoveReplyLike) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get replyID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RemoveVote extends ethereum.Event {
  get params(): RemoveVote__Params {
    return new RemoveVote__Params(this);
  }
}

export class RemoveVote__Params {
  _event: RemoveVote;

  constructor(event: RemoveVote) {
    this._event = event;
  }

  get postID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get userID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get voteID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get option(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UpdateBody extends ethereum.Event {
  get params(): UpdateBody__Params {
    return new UpdateBody__Params(this);
  }
}

export class UpdateBody__Params {
  _event: UpdateBody;

  constructor(event: UpdateBody) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get body(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class UpdateCID extends ethereum.Event {
  get params(): UpdateCID__Params {
    return new UpdateCID__Params(this);
  }
}

export class UpdateCID__Params {
  _event: UpdateCID;

  constructor(event: UpdateCID) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get cid(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class UpdateTaggedGroups extends ethereum.Event {
  get params(): UpdateTaggedGroups__Params {
    return new UpdateTaggedGroups__Params(this);
  }
}

export class UpdateTaggedGroups__Params {
  _event: UpdateTaggedGroups;

  constructor(event: UpdateTaggedGroups) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get taggedGroups(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class UpdateTaggedPeople extends ethereum.Event {
  get params(): UpdateTaggedPeople__Params {
    return new UpdateTaggedPeople__Params(this);
  }
}

export class UpdateTaggedPeople__Params {
  _event: UpdateTaggedPeople;

  constructor(event: UpdateTaggedPeople) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get taggedPeople(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class UpdateTags extends ethereum.Event {
  get params(): UpdateTags__Params {
    return new UpdateTags__Params(this);
  }
}

export class UpdateTags__Params {
  _event: UpdateTags;

  constructor(event: UpdateTags) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tags(): Array<string> {
    return this._event.parameters[2].value.toStringArray();
  }
}

export class UpdateTitle extends ethereum.Event {
  get params(): UpdateTitle__Params {
    return new UpdateTitle__Params(this);
  }
}

export class UpdateTitle__Params {
  _event: UpdateTitle;

  constructor(event: UpdateTitle) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get title(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class UpdateType extends ethereum.Event {
  get params(): UpdateType__Params {
    return new UpdateType__Params(this);
  }
}

export class UpdateType__Params {
  _event: UpdateType;

  constructor(event: UpdateType) {
    this._event = event;
  }

  get _executorID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get postType(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class posts__commentHideStatusResult {
  value0: boolean;
  value1: boolean;

  constructor(value0: boolean, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getHiddenByAuthor(): boolean {
    return this.value0;
  }

  getHiddenByAdmin(): boolean {
    return this.value1;
  }
}

export class posts__postByIDResultTaggedElementsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class posts__postByIDResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: string;
  value4: i32;
  value5: string;
  value6: posts__postByIDResultTaggedElementsStruct;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: i32;
  value11: boolean;
  value12: boolean;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: string,
    value4: i32,
    value5: string,
    value6: posts__postByIDResultTaggedElementsStruct,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: i32,
    value11: boolean,
    value12: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set(
      "value10",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value10))
    );
    map.set("value11", ethereum.Value.fromBoolean(this.value11));
    map.set("value12", ethereum.Value.fromBoolean(this.value12));
    return map;
  }

  getAuthor(): Address {
    return this.value0;
  }

  getTitle(): string {
    return this.value1;
  }

  getBody(): string {
    return this.value2;
  }

  getCIDAsset(): string {
    return this.value3;
  }

  get_type(): i32 {
    return this.value4;
  }

  getBackgroundColor(): string {
    return this.value5;
  }

  getTaggedElements(): posts__postByIDResultTaggedElementsStruct {
    return this.value6;
  }

  getGroupID(): BigInt {
    return this.value7;
  }

  getCreatedTimestamp(): BigInt {
    return this.value8;
  }

  getUpdatedTimestamp(): BigInt {
    return this.value9;
  }

  getCaptionType(): i32 {
    return this.value10;
  }

  getSingleOption(): boolean {
    return this.value11;
  }

  getIsNFT(): boolean {
    return this.value12;
  }
}

export class posts__postHideStatusResult {
  value0: boolean;
  value1: boolean;

  constructor(value0: boolean, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getHiddenByAuthor(): boolean {
    return this.value0;
  }

  getHiddenByAdmin(): boolean {
    return this.value1;
  }
}

export class posts__replyHideStatusResult {
  value0: boolean;
  value1: boolean;

  constructor(value0: boolean, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getHiddenByAuthor(): boolean {
    return this.value0;
  }

  getHiddenByAdmin(): boolean {
    return this.value1;
  }
}

export class posts extends ethereum.SmartContract {
  static bind(address: Address): posts {
    return new posts("posts", address);
  }

  NftForPost(param0: BigInt): BigInt {
    let result = super.call("NftForPost", "NftForPost(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_NftForPost(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("NftForPost", "NftForPost(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  administration(): Address {
    let result = super.call("administration", "administration():(address)", []);

    return result[0].toAddress();
  }

  try_administration(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "administration",
      "administration():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  commentHideStatus(param0: BigInt): posts__commentHideStatusResult {
    let result = super.call(
      "commentHideStatus",
      "commentHideStatus(uint256):(bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new posts__commentHideStatusResult(
      result[0].toBoolean(),
      result[1].toBoolean()
    );
  }

  try_commentHideStatus(
    param0: BigInt
  ): ethereum.CallResult<posts__commentHideStatusResult> {
    let result = super.tryCall(
      "commentHideStatus",
      "commentHideStatus(uint256):(bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new posts__commentHideStatusResult(
        value[0].toBoolean(),
        value[1].toBoolean()
      )
    );
  }

  correctVoteID(param0: Address, param1: BigInt, param2: BigInt): boolean {
    let result = super.call(
      "correctVoteID",
      "correctVoteID(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return result[0].toBoolean();
  }

  try_correctVoteID(
    param0: Address,
    param1: BigInt,
    param2: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "correctVoteID",
      "correctVoteID(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  group(): Address {
    let result = super.call("group", "group():(address)", []);

    return result[0].toAddress();
  }

  try_group(): ethereum.CallResult<Address> {
    let result = super.tryCall("group", "group():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  groupIsTaggedAtPost(param0: BigInt, param1: BigInt): boolean {
    let result = super.call(
      "groupIsTaggedAtPost",
      "groupIsTaggedAtPost(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_groupIsTaggedAtPost(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "groupIsTaggedAtPost",
      "groupIsTaggedAtPost(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPostExist(postID: BigInt): boolean {
    let result = super.call("isPostExist", "isPostExist(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(postID)
    ]);

    return result[0].toBoolean();
  }

  try_isPostExist(postID: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPostExist", "isPostExist(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(postID)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  postByID(param0: BigInt): posts__postByIDResult {
    let result = super.call(
      "postByID",
      "postByID(uint256):(address,string,string,string,uint8,string,(uint256[],uint256[]),uint256,uint256,uint256,uint8,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new posts__postByIDResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toI32(),
      result[5].toString(),
      changetype<posts__postByIDResultTaggedElementsStruct>(
        result[6].toTuple()
      ),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toI32(),
      result[11].toBoolean(),
      result[12].toBoolean()
    );
  }

  try_postByID(param0: BigInt): ethereum.CallResult<posts__postByIDResult> {
    let result = super.tryCall(
      "postByID",
      "postByID(uint256):(address,string,string,string,uint8,string,(uint256[],uint256[]),uint256,uint256,uint256,uint8,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new posts__postByIDResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toI32(),
        value[5].toString(),
        changetype<posts__postByIDResultTaggedElementsStruct>(
          value[6].toTuple()
        ),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toI32(),
        value[11].toBoolean(),
        value[12].toBoolean()
      )
    );
  }

  postFactory(): Address {
    let result = super.call("postFactory", "postFactory():(address)", []);

    return result[0].toAddress();
  }

  try_postFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("postFactory", "postFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  postHideStatus(param0: BigInt): posts__postHideStatusResult {
    let result = super.call(
      "postHideStatus",
      "postHideStatus(uint256):(bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new posts__postHideStatusResult(
      result[0].toBoolean(),
      result[1].toBoolean()
    );
  }

  try_postHideStatus(
    param0: BigInt
  ): ethereum.CallResult<posts__postHideStatusResult> {
    let result = super.tryCall(
      "postHideStatus",
      "postHideStatus(uint256):(bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new posts__postHideStatusResult(
        value[0].toBoolean(),
        value[1].toBoolean()
      )
    );
  }

  postIsNFT(param0: BigInt): boolean {
    let result = super.call("postIsNFT", "postIsNFT(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try_postIsNFT(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("postIsNFT", "postIsNFT(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  profileNFT(param0: Address): Address {
    let result = super.call("profileNFT", "profileNFT(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_profileNFT(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("profileNFT", "profileNFT(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  replyHideStatus(param0: BigInt): posts__replyHideStatusResult {
    let result = super.call(
      "replyHideStatus",
      "replyHideStatus(uint256):(bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new posts__replyHideStatusResult(
      result[0].toBoolean(),
      result[1].toBoolean()
    );
  }

  try_replyHideStatus(
    param0: BigInt
  ): ethereum.CallResult<posts__replyHideStatusResult> {
    let result = super.tryCall(
      "replyHideStatus",
      "replyHideStatus(uint256):(bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new posts__replyHideStatusResult(
        value[0].toBoolean(),
        value[1].toBoolean()
      )
    );
  }

  user(): Address {
    let result = super.call("user", "user():(address)", []);

    return result[0].toAddress();
  }

  try_user(): ethereum.CallResult<Address> {
    let result = super.tryCall("user", "user():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userIsTaggedAtPost(param0: BigInt, param1: BigInt): boolean {
    let result = super.call(
      "userIsTaggedAtPost",
      "userIsTaggedAtPost(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_userIsTaggedAtPost(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "userIsTaggedAtPost",
      "userIsTaggedAtPost(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _administration(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _group(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _user(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _postFac(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddCommentCall extends ethereum.Call {
  get inputs(): AddCommentCall__Inputs {
    return new AddCommentCall__Inputs(this);
  }

  get outputs(): AddCommentCall__Outputs {
    return new AddCommentCall__Outputs(this);
  }
}

export class AddCommentCall__Inputs {
  _call: AddCommentCall;

  constructor(call: AddCommentCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get postID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _comment(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _tags(): AddCommentCall_tagsStruct {
    return changetype<AddCommentCall_tagsStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class AddCommentCall__Outputs {
  _call: AddCommentCall;

  constructor(call: AddCommentCall) {
    this._call = call;
  }
}

export class AddCommentCall_tagsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class AddCommentLikeCall extends ethereum.Call {
  get inputs(): AddCommentLikeCall__Inputs {
    return new AddCommentLikeCall__Inputs(this);
  }

  get outputs(): AddCommentLikeCall__Outputs {
    return new AddCommentLikeCall__Outputs(this);
  }
}

export class AddCommentLikeCall__Inputs {
  _call: AddCommentLikeCall;

  constructor(call: AddCommentLikeCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get commentID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AddCommentLikeCall__Outputs {
  _call: AddCommentLikeCall;

  constructor(call: AddCommentLikeCall) {
    this._call = call;
  }
}

export class AddPostLikeCall extends ethereum.Call {
  get inputs(): AddPostLikeCall__Inputs {
    return new AddPostLikeCall__Inputs(this);
  }

  get outputs(): AddPostLikeCall__Outputs {
    return new AddPostLikeCall__Outputs(this);
  }
}

export class AddPostLikeCall__Inputs {
  _call: AddPostLikeCall;

  constructor(call: AddPostLikeCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get postID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AddPostLikeCall__Outputs {
  _call: AddPostLikeCall;

  constructor(call: AddPostLikeCall) {
    this._call = call;
  }
}

export class AddReplyCall extends ethereum.Call {
  get inputs(): AddReplyCall__Inputs {
    return new AddReplyCall__Inputs(this);
  }

  get outputs(): AddReplyCall__Outputs {
    return new AddReplyCall__Outputs(this);
  }
}

export class AddReplyCall__Inputs {
  _call: AddReplyCall;

  constructor(call: AddReplyCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get commentID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get text(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _tags(): AddReplyCall_tagsStruct {
    return changetype<AddReplyCall_tagsStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class AddReplyCall__Outputs {
  _call: AddReplyCall;

  constructor(call: AddReplyCall) {
    this._call = call;
  }
}

export class AddReplyCall_tagsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class AddReplyLikeCall extends ethereum.Call {
  get inputs(): AddReplyLikeCall__Inputs {
    return new AddReplyLikeCall__Inputs(this);
  }

  get outputs(): AddReplyLikeCall__Outputs {
    return new AddReplyLikeCall__Outputs(this);
  }
}

export class AddReplyLikeCall__Inputs {
  _call: AddReplyLikeCall;

  constructor(call: AddReplyLikeCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get replyID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AddReplyLikeCall__Outputs {
  _call: AddReplyLikeCall;

  constructor(call: AddReplyLikeCall) {
    this._call = call;
  }
}

export class AddVoteCall extends ethereum.Call {
  get inputs(): AddVoteCall__Inputs {
    return new AddVoteCall__Inputs(this);
  }

  get outputs(): AddVoteCall__Outputs {
    return new AddVoteCall__Outputs(this);
  }
}

export class AddVoteCall__Inputs {
  _call: AddVoteCall;

  constructor(call: AddVoteCall) {
    this._call = call;
  }

  get userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get postID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get option(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class AddVoteCall__Outputs {
  _call: AddVoteCall;

  constructor(call: AddVoteCall) {
    this._call = call;
  }
}

export class AdminHidePostCall extends ethereum.Call {
  get inputs(): AdminHidePostCall__Inputs {
    return new AdminHidePostCall__Inputs(this);
  }

  get outputs(): AdminHidePostCall__Outputs {
    return new AdminHidePostCall__Outputs(this);
  }
}

export class AdminHidePostCall__Inputs {
  _call: AdminHidePostCall;

  constructor(call: AdminHidePostCall) {
    this._call = call;
  }

  get executor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get postID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AdminHidePostCall__Outputs {
  _call: AdminHidePostCall;

  constructor(call: AdminHidePostCall) {
    this._call = call;
  }
}

export class AuthorHidePostCall extends ethereum.Call {
  get inputs(): AuthorHidePostCall__Inputs {
    return new AuthorHidePostCall__Inputs(this);
  }

  get outputs(): AuthorHidePostCall__Outputs {
    return new AuthorHidePostCall__Outputs(this);
  }
}

export class AuthorHidePostCall__Inputs {
  _call: AuthorHidePostCall;

  constructor(call: AuthorHidePostCall) {
    this._call = call;
  }

  get executor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get postID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class AuthorHidePostCall__Outputs {
  _call: AuthorHidePostCall;

  constructor(call: AuthorHidePostCall) {
    this._call = call;
  }
}

export class DeleteCommentCall extends ethereum.Call {
  get inputs(): DeleteCommentCall__Inputs {
    return new DeleteCommentCall__Inputs(this);
  }

  get outputs(): DeleteCommentCall__Outputs {
    return new DeleteCommentCall__Outputs(this);
  }
}

export class DeleteCommentCall__Inputs {
  _call: DeleteCommentCall;

  constructor(call: DeleteCommentCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get commentID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class DeleteCommentCall__Outputs {
  _call: DeleteCommentCall;

  constructor(call: DeleteCommentCall) {
    this._call = call;
  }
}

export class DeleteReplyCall extends ethereum.Call {
  get inputs(): DeleteReplyCall__Inputs {
    return new DeleteReplyCall__Inputs(this);
  }

  get outputs(): DeleteReplyCall__Outputs {
    return new DeleteReplyCall__Outputs(this);
  }
}

export class DeleteReplyCall__Inputs {
  _call: DeleteReplyCall;

  constructor(call: DeleteReplyCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get replyID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class DeleteReplyCall__Outputs {
  _call: DeleteReplyCall;

  constructor(call: DeleteReplyCall) {
    this._call = call;
  }
}

export class EditCommentCall extends ethereum.Call {
  get inputs(): EditCommentCall__Inputs {
    return new EditCommentCall__Inputs(this);
  }

  get outputs(): EditCommentCall__Outputs {
    return new EditCommentCall__Outputs(this);
  }
}

export class EditCommentCall__Inputs {
  _call: EditCommentCall;

  constructor(call: EditCommentCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get commentID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newComment(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _tags(): EditCommentCall_tagsStruct {
    return changetype<EditCommentCall_tagsStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class EditCommentCall__Outputs {
  _call: EditCommentCall;

  constructor(call: EditCommentCall) {
    this._call = call;
  }
}

export class EditCommentCall_tagsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class EditReplyCall extends ethereum.Call {
  get inputs(): EditReplyCall__Inputs {
    return new EditReplyCall__Inputs(this);
  }

  get outputs(): EditReplyCall__Outputs {
    return new EditReplyCall__Outputs(this);
  }
}

export class EditReplyCall__Inputs {
  _call: EditReplyCall;

  constructor(call: EditReplyCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get replyID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newText(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _tags(): EditReplyCall_tagsStruct {
    return changetype<EditReplyCall_tagsStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class EditReplyCall__Outputs {
  _call: EditReplyCall;

  constructor(call: EditReplyCall) {
    this._call = call;
  }
}

export class EditReplyCall_tagsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class MakePostCall extends ethereum.Call {
  get inputs(): MakePostCall__Inputs {
    return new MakePostCall__Inputs(this);
  }

  get outputs(): MakePostCall__Outputs {
    return new MakePostCall__Outputs(this);
  }
}

export class MakePostCall__Inputs {
  _call: MakePostCall;

  constructor(call: MakePostCall) {
    this._call = call;
  }

  get post(): MakePostCallPostStruct {
    return changetype<MakePostCallPostStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _uri(): string {
    return this._call.inputValues[1].value.toString();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class MakePostCall__Outputs {
  _call: MakePostCall;

  constructor(call: MakePostCall) {
    this._call = call;
  }
}

export class MakePostCallPostStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get title(): string {
    return this[1].toString();
  }

  get body(): string {
    return this[2].toString();
  }

  get CIDAsset(): string {
    return this[3].toString();
  }

  get _type(): i32 {
    return this[4].toI32();
  }

  get tags(): Array<string> {
    return this[5].toStringArray();
  }

  get backgroundColor(): string {
    return this[6].toString();
  }

  get taggedElements(): MakePostCallPostTaggedElementsStruct {
    return changetype<MakePostCallPostTaggedElementsStruct>(this[7].toTuple());
  }

  get groupID(): BigInt {
    return this[8].toBigInt();
  }

  get createdTimestamp(): BigInt {
    return this[9].toBigInt();
  }

  get updatedTimestamp(): BigInt {
    return this[10].toBigInt();
  }

  get captionType(): i32 {
    return this[11].toI32();
  }

  get pollOptions(): Array<string> {
    return this[12].toStringArray();
  }

  get singleOption(): boolean {
    return this[13].toBoolean();
  }

  get isNFT(): boolean {
    return this[14].toBoolean();
  }
}

export class MakePostCallPostTaggedElementsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class RemoveCommentLikeCall extends ethereum.Call {
  get inputs(): RemoveCommentLikeCall__Inputs {
    return new RemoveCommentLikeCall__Inputs(this);
  }

  get outputs(): RemoveCommentLikeCall__Outputs {
    return new RemoveCommentLikeCall__Outputs(this);
  }
}

export class RemoveCommentLikeCall__Inputs {
  _call: RemoveCommentLikeCall;

  constructor(call: RemoveCommentLikeCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get commentID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RemoveCommentLikeCall__Outputs {
  _call: RemoveCommentLikeCall;

  constructor(call: RemoveCommentLikeCall) {
    this._call = call;
  }
}

export class RemovePostLikeCall extends ethereum.Call {
  get inputs(): RemovePostLikeCall__Inputs {
    return new RemovePostLikeCall__Inputs(this);
  }

  get outputs(): RemovePostLikeCall__Outputs {
    return new RemovePostLikeCall__Outputs(this);
  }
}

export class RemovePostLikeCall__Inputs {
  _call: RemovePostLikeCall;

  constructor(call: RemovePostLikeCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get postID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RemovePostLikeCall__Outputs {
  _call: RemovePostLikeCall;

  constructor(call: RemovePostLikeCall) {
    this._call = call;
  }
}

export class RemoveReplyLikeCall extends ethereum.Call {
  get inputs(): RemoveReplyLikeCall__Inputs {
    return new RemoveReplyLikeCall__Inputs(this);
  }

  get outputs(): RemoveReplyLikeCall__Outputs {
    return new RemoveReplyLikeCall__Outputs(this);
  }
}

export class RemoveReplyLikeCall__Inputs {
  _call: RemoveReplyLikeCall;

  constructor(call: RemoveReplyLikeCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get replyID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RemoveReplyLikeCall__Outputs {
  _call: RemoveReplyLikeCall;

  constructor(call: RemoveReplyLikeCall) {
    this._call = call;
  }
}

export class RemoveVoteCall extends ethereum.Call {
  get inputs(): RemoveVoteCall__Inputs {
    return new RemoveVoteCall__Inputs(this);
  }

  get outputs(): RemoveVoteCall__Outputs {
    return new RemoveVoteCall__Outputs(this);
  }
}

export class RemoveVoteCall__Inputs {
  _call: RemoveVoteCall;

  constructor(call: RemoveVoteCall) {
    this._call = call;
  }

  get userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get postID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get option(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get voteID(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class RemoveVoteCall__Outputs {
  _call: RemoveVoteCall;

  constructor(call: RemoveVoteCall) {
    this._call = call;
  }
}

export class UpdatePostCall extends ethereum.Call {
  get inputs(): UpdatePostCall__Inputs {
    return new UpdatePostCall__Inputs(this);
  }

  get outputs(): UpdatePostCall__Outputs {
    return new UpdatePostCall__Outputs(this);
  }
}

export class UpdatePostCall__Inputs {
  _call: UpdatePostCall;

  constructor(call: UpdatePostCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get postID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get uri(): string {
    return this._call.inputValues[2].value.toString();
  }

  get post(): UpdatePostCallPostStruct {
    return changetype<UpdatePostCallPostStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get updatedFields(): Array<i32> {
    return this._call.inputValues[4].value.toI32Array();
  }

  get numberOfUpdatedFields(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get expiredSession(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get newSession(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class UpdatePostCall__Outputs {
  _call: UpdatePostCall;

  constructor(call: UpdatePostCall) {
    this._call = call;
  }
}

export class UpdatePostCallPostStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get title(): string {
    return this[1].toString();
  }

  get body(): string {
    return this[2].toString();
  }

  get CIDAsset(): string {
    return this[3].toString();
  }

  get _type(): i32 {
    return this[4].toI32();
  }

  get tags(): Array<string> {
    return this[5].toStringArray();
  }

  get backgroundColor(): string {
    return this[6].toString();
  }

  get taggedElements(): UpdatePostCallPostTaggedElementsStruct {
    return changetype<UpdatePostCallPostTaggedElementsStruct>(
      this[7].toTuple()
    );
  }

  get groupID(): BigInt {
    return this[8].toBigInt();
  }

  get createdTimestamp(): BigInt {
    return this[9].toBigInt();
  }

  get updatedTimestamp(): BigInt {
    return this[10].toBigInt();
  }

  get captionType(): i32 {
    return this[11].toI32();
  }

  get pollOptions(): Array<string> {
    return this[12].toStringArray();
  }

  get singleOption(): boolean {
    return this[13].toBoolean();
  }

  get isNFT(): boolean {
    return this[14].toBoolean();
  }
}

export class UpdatePostCallPostTaggedElementsStruct extends ethereum.Tuple {
  get people(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get groups(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}
